Given two number A and B, find the greatest number that divides both A and B. GCD(2,8) = 2$, $GCD(3,4) = 1, $GCD(12,15) = 3$.The two trivial states for GCD are GCD(a,a) = a$ and $GCD(a,0) = a$.

1 . Recursive Version :

int gcd ( int a, int b ) {
    if ( b == 0 ) return a;
    return gcd ( b, a % b );
}

2. Iterative Version :

int gcd ( int a, int b ) {
    while ( b ) {
        a = a % b;
        swap ( a, b );
    }
    return a;
}

3. There is also a builtin function in C++ for finding gcd. You can simply write __gcd(a,b) to find GCD(a,b).

The complexity of Euclidean Algorithm according to the answer is O(log10^A+log10^B) .

1. int lcm ( int a, int b ) {
    return ( a * b ) / gcd ( a, b );
}

This will work, but for some cases, this code will overflow.

2. int lcm ( int a, int b ) {
    return ( a / gcd ( a, b ) ) * b;
}
